version 0:20140528:$full:$large;
extension "amd:gcn";
extension "IMAGE";

decl prog function &abort()();

prog kernel &ZZ4mainEN3_EC__019__cxxamp_trampolineEPiiiiiiiiS0_iiiiiiiS0_iiiiiii(
	kernarg_u64 %global_offset_0,
	kernarg_u64 %global_offset_1,
	kernarg_u64 %global_offset_2,
	kernarg_u64 %__arg_p3,
align (8) kernarg_u32 %__arg_p4,
align (8) kernarg_u32 %__arg_p5,
align (8) kernarg_u32 %__arg_p6,
align (8) kernarg_u32 %__arg_p7,
align (8) kernarg_u32 %__arg_p8,
align (8) kernarg_u32 %__arg_p9,
align (8) kernarg_u32 %__arg_p10,
	kernarg_u64 %__arg_p11,
align (8) kernarg_u32 %__arg_p12,
align (8) kernarg_u32 %__arg_p13,
align (8) kernarg_u32 %__arg_p14,
align (8) kernarg_u32 %__arg_p15,
align (8) kernarg_u32 %__arg_p16,
align (8) kernarg_u32 %__arg_p17,
align (8) kernarg_u32 %__arg_p18,
	kernarg_u64 %__arg_p19,
align (8) kernarg_u32 %__arg_p20,
align (8) kernarg_u32 %__arg_p21,
align (8) kernarg_u32 %__arg_p22,
align (8) kernarg_u32 %__arg_p23,
align (8) kernarg_u32 %__arg_p24,
align (8) kernarg_u32 %__arg_p25,
align (8) kernarg_u32 %__arg_p26)
{
	pragma  "AMD RTI", "ARGSTART:ZZ4mainEN3_EC__019__cxxamp_trampolineEPiiiiiiiiS0_iiiiiiiS0_iiiiiii";
	pragma  "AMD RTI", "version:3:1:104";
	pragma  "AMD RTI", "device:generic";
	pragma  "AMD RTI", "uniqueid:1027";
	pragma  "AMD RTI", "memory:private:0";
	pragma  "AMD RTI", "memory:region:0";
	pragma  "AMD RTI", "memory:local:0";
	pragma  "AMD RTI", "value:global_offset_0:u64:1:1:0";
	pragma  "AMD RTI", "value:global_offset_1:u64:1:1:16";
	pragma  "AMD RTI", "value:global_offset_2:u64:1:1:32";
	pragma  "AMD RTI", "pointer::u32:1:1:48:uav:8:4:RW:0:0:0";
	pragma  "AMD RTI", "value::u32:1:1:64";
	pragma  "AMD RTI", "value::u32:1:1:80";
	pragma  "AMD RTI", "value::u32:1:1:96";
	pragma  "AMD RTI", "value::u32:1:1:112";
	pragma  "AMD RTI", "value::u32:1:1:128";
	pragma  "AMD RTI", "value::u32:1:1:144";
	pragma  "AMD RTI", "value::u32:1:1:160";
	pragma  "AMD RTI", "pointer::u32:1:1:176:uav:8:4:RW:0:0:0";
	pragma  "AMD RTI", "value::u32:1:1:192";
	pragma  "AMD RTI", "value::u32:1:1:208";
	pragma  "AMD RTI", "value::u32:1:1:224";
	pragma  "AMD RTI", "value::u32:1:1:240";
	pragma  "AMD RTI", "value::u32:1:1:256";
	pragma  "AMD RTI", "value::u32:1:1:272";
	pragma  "AMD RTI", "value::u32:1:1:288";
	pragma  "AMD RTI", "pointer::u32:1:1:304:uav:8:4:RW:0:0:0";
	pragma  "AMD RTI", "value::u32:1:1:320";
	pragma  "AMD RTI", "value::u32:1:1:336";
	pragma  "AMD RTI", "value::u32:1:1:352";
	pragma  "AMD RTI", "value::u32:1:1:368";
	pragma  "AMD RTI", "value::u32:1:1:384";
	pragma  "AMD RTI", "value::u32:1:1:400";
	pragma  "AMD RTI", "value::u32:1:1:416";
	pragma  "AMD RTI", "function:1:0";
	pragma  "AMD RTI", "memory:64bitABI";
	pragma  "AMD RTI", "uavid:8";
	pragma  "AMD RTI", "privateid:8";
	pragma  "AMD RTI", "enqueue_kernel:0";
	pragma  "AMD RTI", "kernel_index:4294967295";
	pragma  "AMD RTI", "reflection:0:size_t";
	pragma  "AMD RTI", "reflection:1:size_t";
	pragma  "AMD RTI", "reflection:2:size_t";
	pragma  "AMD RTI", "reflection:3:int*";
	pragma  "AMD RTI", "reflection:4:int";
	pragma  "AMD RTI", "reflection:5:int";
	pragma  "AMD RTI", "reflection:6:int";
	pragma  "AMD RTI", "reflection:7:int";
	pragma  "AMD RTI", "reflection:8:int";
	pragma  "AMD RTI", "reflection:9:int";
	pragma  "AMD RTI", "reflection:10:int";
	pragma  "AMD RTI", "reflection:11:int*";
	pragma  "AMD RTI", "reflection:12:int";
	pragma  "AMD RTI", "reflection:13:int";
	pragma  "AMD RTI", "reflection:14:int";
	pragma  "AMD RTI", "reflection:15:int";
	pragma  "AMD RTI", "reflection:16:int";
	pragma  "AMD RTI", "reflection:17:int";
	pragma  "AMD RTI", "reflection:18:int";
	pragma  "AMD RTI", "reflection:19:int*";
	pragma  "AMD RTI", "reflection:20:int";
	pragma  "AMD RTI", "reflection:21:int";
	pragma  "AMD RTI", "reflection:22:int";
	pragma  "AMD RTI", "reflection:23:int";
	pragma  "AMD RTI", "reflection:24:int";
	pragma  "AMD RTI", "reflection:25:int";
	pragma  "AMD RTI", "reflection:26:int";
	pragma  "AMD RTI", "ARGEND:ZZ4mainEN3_EC__019__cxxamp_trampolineEPiiiiiiiiS0_iiiiiiiS0_iiiiiii";

@ZZ4mainEN3_EC__019__cxxamp_trampolineEPiiiiiiiiS0_iiiiiiiS0_iiiiiii_entry:
	// BB#0:
	ld_kernarg_align(4)_width(all)_u32	$s0, [%__arg_p16];
	ld_kernarg_align(4)_width(all)_u32	$s1, [%__arg_p18];
	add_u32	$s1, $s1, $s0;
	workitemabsid_u32	$s0, 0;
	cvt_u64_u32	$d0, $s0;
	ld_kernarg_align(8)_width(all)_u64	$d1, [0];
	add_u64	$d0, $d0, $d1;
	cvt_u32_u64	$s0, $d0;
	add_u32	$s1, $s1, $s0;
	cvt_s64_s32	$d0, $s1;
	shl_u64	$d1, $d0, 2;
	ld_kernarg_align(4)_width(all)_u32	$s2, [%__arg_p24];
	ld_kernarg_align(4)_width(all)_u32	$s3, [%__arg_p26];
	ld_kernarg_align(4)_width(all)_u32	$s1, [%__arg_p8];
	ld_kernarg_align(4)_width(all)_u32	$s4, [%__arg_p10];
	add_u32	$s1, $s4, $s1;
	add_u32	$s2, $s3, $s2;
	ld_kernarg_align(8)_width(all)_u64	$d0, [%__arg_p3];
	ld_kernarg_align(8)_width(all)_u64	$d2, [%__arg_p19];
	ld_kernarg_align(8)_width(all)_u64	$d3, [%__arg_p11];
	add_u64	$d1, $d3, $d1;
	ld_global_align(4)_u32	$s3, [$d1];
	add_u32	$s2, $s2, $s0;
	cvt_s64_s32	$d1, $s2;
	shl_u64	$d1, $d1, 2;
	add_u64	$d1, $d2, $d1;
	ld_global_align(4)_u32	$s2, [$d1];
	add_u32	$s2, $s2, $s3;
	add_u32	$s0, $s1, $s0;
	cvt_s64_s32	$d1, $s0;
	shl_u64	$d1, $d1, 2;
	add_u64	$d0, $d0, $d1;
	st_global_align(4)_u32	$s2, [$d0];
	ret;
};

